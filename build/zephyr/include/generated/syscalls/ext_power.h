/* auto-generated by gen_syscalls.py, don't edit */

#ifndef Z_INCLUDE_SYSCALLS_EXT_POWER_H
#define Z_INCLUDE_SYSCALLS_EXT_POWER_H


#include <zephyr/tracing/tracing_syscall.h>

#ifndef _ASMLANGUAGE

#include <stdarg.h>

#include <syscall_list.h>
#include <zephyr/syscall.h>

#include <zephyr/linker/sections.h>


#ifdef __cplusplus
extern "C" {
#endif

extern int z_impl_ext_power_enable(const struct device * dev);

__pinned_func
static inline int ext_power_enable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		return (int) arch_syscall_invoke1(parm0.x, K_SYSCALL_EXT_POWER_ENABLE);
	}
#endif
	compiler_barrier();
	return z_impl_ext_power_enable(dev);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define ext_power_enable(dev) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_EXT_POWER_ENABLE, ext_power_enable, dev); 	syscall__retval = ext_power_enable(dev); 	sys_port_trace_syscall_exit(K_SYSCALL_EXT_POWER_ENABLE, ext_power_enable, dev, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_ext_power_disable(const struct device * dev);

__pinned_func
static inline int ext_power_disable(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		return (int) arch_syscall_invoke1(parm0.x, K_SYSCALL_EXT_POWER_DISABLE);
	}
#endif
	compiler_barrier();
	return z_impl_ext_power_disable(dev);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define ext_power_disable(dev) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_EXT_POWER_DISABLE, ext_power_disable, dev); 	syscall__retval = ext_power_disable(dev); 	sys_port_trace_syscall_exit(K_SYSCALL_EXT_POWER_DISABLE, ext_power_disable, dev, syscall__retval); 	syscall__retval; })
#endif
#endif


extern int z_impl_ext_power_get(const struct device * dev);

__pinned_func
static inline int ext_power_get(const struct device * dev)
{
#ifdef CONFIG_USERSPACE
	if (z_syscall_trap()) {
		union { uintptr_t x; const struct device * val; } parm0 = { .val = dev };
		return (int) arch_syscall_invoke1(parm0.x, K_SYSCALL_EXT_POWER_GET);
	}
#endif
	compiler_barrier();
	return z_impl_ext_power_get(dev);
}

#if defined(CONFIG_TRACING_SYSCALL)
#ifndef DISABLE_SYSCALL_TRACING

#define ext_power_get(dev) ({ 	int syscall__retval; 	sys_port_trace_syscall_enter(K_SYSCALL_EXT_POWER_GET, ext_power_get, dev); 	syscall__retval = ext_power_get(dev); 	sys_port_trace_syscall_exit(K_SYSCALL_EXT_POWER_GET, ext_power_get, dev, syscall__retval); 	syscall__retval; })
#endif
#endif


#ifdef __cplusplus
}
#endif

#endif
#endif /* include guard */
